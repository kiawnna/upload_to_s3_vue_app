Parameters:
  Env:
    Description: Environment
    Default: DEV
    AllowedValues:
      - DEV
      - STAGING
      - PRODUCTION
    Type: String
  Company:
    Description: Name of company, for naming conventions
    Type: String
  Application:
    Description: Name of application
    MaxLength: 20
    MinLength: 2
    Type: String
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub "${AWS::AccountId}-artifact-bucket"

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub "${Company}-${Application}-${Env}-Cognito-UserPool"
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub "${Company}-${Application}-${Env}-Cognito-UserPoolClient"
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      GenerateSecret: false

  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: !Sub "${Company}_${Application}_${Env}_Cognito_IdentityPool"
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId:
            Ref: CognitoUserPoolClient
          ProviderName:
            Fn::GetAtt: [ "CognitoUserPool", "ProviderName" ]

  CognitoIdentityPoolRoles:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: CognitoIdentityPool
      Roles:
        authenticated:
          Fn::GetAtt: [CognitoAuthRole, Arn]
        unauthenticated:
          Fn::GetAtt: [CognitoAuthRole, Arn]

  CognitoAuthRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Federated: 'cognito-identity.amazonaws.com'
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
      Policies:
        - PolicyName: 'CognitoAuthorizedPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - "lambda:invokeFunction"
                Resource: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:api-*"
              - Effect: 'Allow'
                Action:
                  - "s3:*"
                Resource:
                  - !Sub "arn:aws:s3:::${AWS::AccountId}-artifact-bucket"
                  - !Sub "arn:aws:s3:::${AWS::AccountId}-artifact-bucket/*"
Outputs:
  UserPoolId:
    Value:
      Ref: CognitoUserPool

  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient

  IdentityPoolId:
    Value:
      Ref: CognitoIdentityPool
